1 1 + dup + dup + dup + BASE ! A BASE ! .s CR  -1 
 ok
vers 0.0.0.5.b- Tue Jun 23 18:15:22 UTC 2020  ok
cold
stm32eForth v7.20
words
 signon-b eflogo signon vers base-sixteen base-ten test6 clearit said sent at80=(0,2,C) at80=(0,1,0) at80=(0,0,4) atef=(1) s_atd1=() line_end SETUP_USART6 outc outsent_TC? boutsent? USART6_SR_TC? OLD_A_USART6_SR_TC? USART6_SR_TXE? TC TXE USART6_SR ralfc USART6_DR SET_AF8_BITS_GPIOC_AFRL AF8_BITS GPIOC_AFRL! GPIOC_AFRL nAF8 PIN_MASK_PC6_PC7 AF_MASK_PC6_PC7 SET_GPIOC_MODER_PC6_PC7_ALT_A AF_MODE SET_GPIOC_MODER_PC6_PC7_ALT_B PC6,7_AF_MODE GPIOC_MODER! GPIOC_MODER GPIOC SET_USART1_CR1_UE UNSET_USART1_CR1_UE SETUP_USART6_CR1_TE SETUP_USART6_CR1 SET_USART6_BRR USART6_BRR USART1_CR1_SETUPS USART1_CR1_RE USART6_CR1_RE USART1_CR1_TE USART6_CR1_TE USART1_CR1_UE USART6_CR1_UE USART1_CR1 USART6_CR1 USART6 USART1 SIO_RCC! USART6EN GPIOCEN carr_ret hash_symb plus_sign pollc readkeyc nullemit linit blinks setupled off on led! led blue red orange green GPIOD_BSRR! BRX BSX GPIOD_BSRR OUTPUT GPIOD_MODER! GPIOD_MODER GPIOD RCC! USART1EN GPIODEN RCC_APB2ENR RCC_AHB1ENR RCC finishmsg ldelay bdkdel bdelay delay 2^ << <1? cold words see .s dump preset char cr type spaces space key decimal hex here depth base min max abs negate not 2dup 2drop rot and or over swap dup drop nop emit COLD HI WORDS DECOMPILE SEE .ID >NAME .S DUMP VARIABLE CREATE CONSTANT IMMEDIATE : ] ; OVERT $COMPILE ?UNIQUE ." $" ABORT" WHILE ELSE AFT THEN REPEAT AHEAD IF AGAIN UNTIL NEXT BEGIN FOR LITERAL COMPILE [COMPILE] , ALLOT ' TURNKEY I! ERASE_SECTOR QUIT PRESET EVAL ?STACK .OK [ $INTERPRET ABORT QUERY ACCEPT NAME? SAME? NAME> TOKEN WORD CHAR \ ( .( PARSE ? . U. U.R .R CR TYPE SPACES SPACE KEY NUMBER? DIGIT? DECIMAL HEX #> SIGN #S # HOLD <# EXTRACT DIGIT PACK$ FILL MOVE CMOVE @EXECUTE TIB PAD HERE PICK DEPTH >CHAR ALIGNED */ */MOD / MOD /MOD M/MOD UM/MOD WITHIN LAST CP CONTEXT HLD 'EVAL #TIB >IN SPAN BASE 'BOOT DNEGATE COUNT 2@ 2! +! MIN MAX > < U< = ABS NEGATE NOT D+ 2DUP 2DROP ROT ?DUP 2/ 2* CELL/ CELLS BL CELL- CELL+ 2- 2+ 1- 1+ M* UM* * - + LSHIFT RSHIFT UM+ XOR OR AND 0< OVER SWAP DUP DROP SP@ >R R@ R> C@ C! @ ! EXIT EXECUTE NOP EMIT ?KEY ok



stm32eForth v7.20
words
 signon-b eflogo signon 

okay, missing only:

 signon-b eflogo signon ... so that's fine (they are essentially application-layer words).

GOOD: 18 December 2020 17:56 UTC


Edit: simplest way to say this:

signon is like this:

see signon
 led OUTPUT FC12F7FC 2 blinks SETUP_USART6 sent atef=(1) sent hash_symb outc hash_symb outc hash_symb outc sent clearit sent FBF2F7FC 20 outc ok
 ok

So it's just a 'toy' word that can be anything desired.
Not critical; was meant to signal the human operator
that 'something interesting is happening' and confirms,
in a few different ways, that the system is up and
operational, without, for example, requiring a terminal
connected this forth.

Literally: two links of an external front panel LED,
followed by three hash symbols displayed on the Lumex
96x8 RGB array (digital signage) followed by:
'eForth' displayed in the middle of the display
(the hash marks are overwritten).

A toy word. ;)

END.
